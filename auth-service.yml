
# EMBEDDED SERVER CONFIGURATION
server:
    port: ${port:8083}
    context-path: /
    use-forward-headers: true
    error.whitelabel.enabled: false
    compression:
      enabled: true
      min-response-size: 1024
      mime-types:
          - text/html
          - text/css
          - text/plain
          - text/xml
          - application/json
          - application/javascript

# EUREKA
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
# LOGGING
#logging.level.org.springframework.security: DEBUG

# TOKENSTORE
jdbc:
  host:
    mytraits-token-store.cajqukhp151z.us-east-1.rds.amazonaws.com
  port:
    5432
  activitydb:
    tokenstore

# DATABASE
spring:
  datasource:
      dataSourceClassName: org.postgresql.ds.PGSimpleDataSource
      url: jdbc:postgresql://mytraits-token-store.cajqukhp151z.us-east-1.rds.amazonaws.com:5432/tokenstore
      databaseName: tokenstore
      serverName: mytraits-token-store.cajqukhp151z.us-east-1.rds.amazonaws.com
  jpa:
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      database: POSTGRESQL
      openInView: false
      show_sql: false
      generate-ddl: false
      hibernate:
          ddl-auto: validate
          naming-strategy: org.hibernate.cfg.EJB3NamingStrategy
      properties:
          hibernate.cache.use_second_level_cache: false
          hibernate.cache.use_query_cache: false
          hibernate.generate_statistics: false

---

spring:
  profiles: docker

# EUREKA
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8081/eureka/

---

spring:
  profiles: standalone

# EUREKA
eureka:
  instance:
    hostname: localhost
    port: 8081
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
